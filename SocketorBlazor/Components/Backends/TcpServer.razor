@using Socketor.DataModel
@using TauriApi
@implements Socketor.Utilities.IMessageBackend
@inject Tauri Tauri

@code {

    public RenderFragment PropertyArea =>
        @<div class="tool-section">
            <div class="config-title">TCP Host</div>
            <input class="config-input" placeholder="Server Host" @bind="ServerHost"/>
            <button @onclick="ChangeConnection"> @_connectButtonText </button>
    </div>;

    public Task SendMessageAsync(string message)
    {
        throw new NotImplementedException();
    }

    public event Action<MessageItemDto>? ShowMessage;

    private bool _connected;

    private string _connectButtonText = "连接";

    private string ServerHost { get; set; } = "127.0.0.1:7898";

    //切换连接或断开
    private async Task ChangeConnection()
    {
        if (_connected)
        {
            //后端停止TCP服务
            var result = await Tauri.Invoke<ActionResultDto>("stop_tcp_server");
            if (result.Success)
            {
                _connected = false;
                _connectButtonText = "连接";
            }
        }
        else
        {
            //后端启动TCP服务
            var result = await Tauri.Invoke<ActionResultDto>("start_tcp_server", new { host = ServerHost });
            if (result.Success)
            {
                _connected = true;
                _connectButtonText = "断开";
            }
        }
    }

}